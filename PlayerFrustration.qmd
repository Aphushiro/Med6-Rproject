---
title: "Experienced User Frustration"
---

# Plot Averages with 
```{r}
library(tidyverse)

justFrust <- df %>% 
  group_by(ID, FrustLumber, FrustGolf, FrustSand) %>% 
  summarise()

# Reshape data to long format
justFrust_long <- df %>%
  pivot_longer(cols = starts_with("Frust"), names_to = "Variable", values_to = "Value")

# Calculate mean and standard error for each variable
summary_stats <- justFrust_long %>%
  group_by(Variable) %>%
  summarize(
    mean = mean(Value),
    std_error = sd(Value) / sqrt(n())
  )

ggplot() +
  geom_point(data = justFrust_long, aes(x = Variable, y = Value), position = position_dodge2(width = 0.5, preserve = "single"), color = "gray", size = 2, show.legend = FALSE) +
  geom_errorbar(data = summary_stats, aes(x = Variable, ymin = mean - std_error, ymax = mean + std_error), width = 0.1, color = "black") +
  geom_point(data = summary_stats, aes(x = Variable, y = mean), size = 3, color = "black", show.legend = FALSE) +
  #geom_point(data = summary_stats %>% filter(Variable == "Frust1"), aes(x = Variable, y = mean), size = 3, color = "#8B4513", show.legend = FALSE) +
  #geom_point(data = summary_stats %>% filter(Variable == "Frust2"), aes(x = Variable, y = mean), size = 3, color = "#008000", show.legend = FALSE) +
  #geom_point(data = summary_stats %>% filter(Variable == "Frust3"), aes(x = Variable, y = mean), size = 3, color = "#e5ca19", show.legend = FALSE) +
  geom_text(data = summary_stats, aes(x = Variable, y = mean, label = round(mean, 2)), vjust = -0.5, hjust = -0.5, color = "black") +
  labs(title = "Frustation Experienced on Worst-Case States",
       x = "Games",
       y = "Frustration Rating") +
  scale_y_continuous(breaks = seq(-3, 3, 1), limits = c(-3, 3)) +
  theme_minimal() +
  scale_x_discrete(labels = c("FrustLumber" = "Lumber", "FrustGolf" = "Golf", "FrustSand" = "Sand")) +
  theme(panel.grid.major.y = element_blank(),
        #panel.grid.minor.y = element_blank(),
        plot.title = element_text(hjust = 0.5))
```

```{r}
library(tidyverse)
library(ggbeeswarm)

# Merge the data
merged_data <- df %>%
  left_join(qualData, by = "ID")

# Reshape to long format
justFrust_long <- merged_data %>%
  pivot_longer(cols = starts_with("Frust"), names_to = "Variable", values_to = "Value") %>%
  mutate(MostFrustratingMatch = case_when(
    (Variable == "FrustLumber" & MostFrustrating == "Lumber") ~ TRUE,
    (Variable == "FrustGolf" & MostFrustrating == "Golf") ~ TRUE,
    (Variable == "FrustSand" & MostFrustrating == "Sand") ~ TRUE,
    TRUE ~ FALSE
  ))

# Calculate mean and standard error for each variable
summary_stats <- justFrust_long %>%
  group_by(Variable) %>%
  summarize(
    mean = mean(Value),
    std_error = sd(Value) / sqrt(n())
  )

# Custom colors for the violins
custom_colors <- c("FrustLumber" = "#8B4513", "FrustGolf" = "#008000", "FrustSand" = "#e5ca19")

# Create the plot
ggplot() +
  geom_violin(data = justFrust_long, aes(x = Variable, y = Value, fill = Variable), alpha = 0.15) +
  geom_quasirandom(data = justFrust_long, aes(x = Variable, y = Value, color = MostFrustratingMatch), 
                   width = 0.2, size = 2, show.legend = FALSE, alpha = 1) +
  geom_errorbar(data = summary_stats, aes(x = Variable, ymin = mean - std_error, ymax = mean + std_error), 
                width = 0.1, color = "black") +
  geom_point(data = summary_stats, aes(x = Variable, y = mean), size = 3, color = "black", show.legend = FALSE) +
  geom_text(data = summary_stats, aes(x = Variable, y = mean, label = round(mean, 2)), 
            vjust = -0.5, hjust = -0.5, color = "black") +
  labs(title = "Frustration Experienced on Worst-Case States",
       x = "Games",
       y = "Frustration Rating") +
  scale_y_continuous(breaks = seq(-3, 3, 1), limits = c(-3, 3)) +
  scale_x_discrete(labels = c("FrustLumber" = "Lumber", "FrustGolf" = "Golf", "FrustSand" = "Sand")) +
  scale_color_manual(values = c("TRUE" = "gray", "FALSE" = "gray")) +
  scale_fill_manual(values = custom_colors) +
  theme_minimal() +
  theme(panel.grid.major.y = element_blank(),
        plot.title = element_text(hjust = 0.5),
        legend.position = "none")

```


```{r}
library(tidyverse)
library(ggbeeswarm)

# Merge the data
merged_data <- df %>%
  left_join(qualData, by = "ID")

# Reshape to long format
justFrust_long <- merged_data %>%
  pivot_longer(cols = starts_with("Frust"), names_to = "Variable", values_to = "Value") %>%
  mutate(MostFrustratingMatch = case_when(
    (Variable == "FrustLumber" & MostFrustrating == "Lumber") ~ TRUE,
    (Variable == "FrustGolf" & MostFrustrating == "Golf") ~ TRUE,
    (Variable == "FrustSand" & MostFrustrating == "Sand") ~ TRUE,
    TRUE ~ FALSE
  ))

# Calculate mean and standard error for each variable
summary_stats <- justFrust_long %>%
  group_by(Variable) %>%
  summarize(
    mean = mean(Value),
    std_error = sd(Value) / sqrt(n())
  )

# Create the plot
ggplot() +
  geom_quasirandom(data = justFrust_long, aes(x = Variable, y = Value, color = MostFrustratingMatch), 
                   width = 0.2, size = 2, show.legend = TRUE) +
  geom_errorbar(data = summary_stats, aes(x = Variable, ymin = mean - std_error, ymax = mean + std_error), 
                width = 0.1, color = "black") +
  geom_point(data = summary_stats, aes(x = Variable, y = mean), size = 3, color = "black", show.legend = FALSE) +
  geom_text(data = summary_stats, aes(x = Variable, y = mean, label = round(mean, 2)), 
            vjust = -0.5, hjust = -0.5, color = "black") +
  labs(title = "Frustration Experienced on Worst-Case States",
       x = "Games",
       y = "Frustration Rating") +
  scale_y_continuous(breaks = seq(-3, 3, 1), limits = c(-3, 3)) +
  scale_x_discrete(labels = c("FrustLumber" = "Lumber", "FrustGolf" = "Golf", "FrustSand" = "Sand")) +
  scale_color_manual(
    values = c("TRUE" = "red", "FALSE" = "gray"),
    name = "Most Frustrating",
    labels = c("TRUE" = "Yes", "FALSE" = "No")
  ) +
  theme_minimal() +
  theme(panel.grid.major.y = element_blank(),
        plot.title = element_text(hjust = 0.5))

```

```{r}
library(tidyverse)
library(ggbeeswarm)

# Merge the data
merged_data <- df %>%
  left_join(qualData, by = "ID")

# Reshape to long format
justFrust_long <- merged_data %>%
  pivot_longer(cols = starts_with("Frust"), names_to = "Variable", values_to = "Value") %>%
  mutate(MostFrustratingMatch = case_when(
    (Variable == "FrustLumber" & MostFrustrating == "Lumber") ~ TRUE,
    (Variable == "FrustGolf" & MostFrustrating == "Golf") ~ TRUE,
    (Variable == "FrustSand" & MostFrustrating == "Sand") ~ TRUE,
    TRUE ~ FALSE
  ))

# Calculate mean and standard error for each variable and frustration match status
summary_stats <- justFrust_long %>%
  group_by(Variable, MostFrustratingMatch) %>%
  summarize(
    mean = mean(Value, na.rm = TRUE),
    std_error = sd(Value, na.rm = TRUE) / sqrt(n()),
    .groups = 'drop'
  ) %>%
  mutate(hjust = ifelse(MostFrustratingMatch, -0.5, 1.5))

# Create the plot
ggplot() +
  geom_quasirandom(data = justFrust_long, aes(x = Variable, y = Value, color = MostFrustratingMatch), 
                   width = 0.2, size = 2, show.legend = FALSE, alpha = 0.3) +
  geom_errorbar(data = summary_stats, aes(x = Variable, ymin = mean - std_error, ymax = mean + std_error, group = MostFrustratingMatch), 
                width = 0.1, color = "black", position = position_dodge(width = 0.3)) +
  geom_point(data = summary_stats, aes(x = Variable, y = mean, group = MostFrustratingMatch, color = MostFrustratingMatch), 
             size = 3, position = position_dodge(width = 0.3), show.legend = TRUE) +
  geom_text(data = summary_stats, aes(x = Variable, y = mean, label = round(mean, 2), group = MostFrustratingMatch, hjust = hjust), 
            position = position_dodge(width = 0.3), vjust = -0.5, color = "black") +
  labs(title = "Frustration Experienced on Worst-Case States",
       x = "Games",
       y = "Frustration Rating") +
  scale_y_continuous(breaks = seq(-3, 3, 1), limits = c(-3, 3)) +
  scale_x_discrete(labels = c("FrustLumber" = "Lumber", "FrustGolf" = "Golf", "FrustSand" = "Sand")) +
  scale_color_manual(
    values = c("TRUE" = "red", "FALSE" = "gray"),
    name = "Selected as Most Frustrating",
    labels = c("TRUE" = "Yes", "FALSE" = "No")
  ) +
  theme_minimal() +
  theme(panel.grid.major.y = element_blank(),
        plot.title = element_text(hjust = 0.5))


```

```{r}
library(tidyverse)
library(ggbeeswarm)

# Merge the data
merged_data <- df %>%
  left_join(qualData, by = "ID")

# Reshape to long format
justFrust_long <- merged_data %>%
  pivot_longer(cols = starts_with("Frust"), names_to = "Variable", values_to = "Value") %>%
  mutate(MostFrustratingMatch = case_when(
    (Variable == "FrustLumber" & MostFrustrating == "Lumber") ~ TRUE,
    (Variable == "FrustGolf" & MostFrustrating == "Golf") ~ TRUE,
    (Variable == "FrustSand" & MostFrustrating == "Sand") ~ TRUE,
    TRUE ~ FALSE
  ))

# Calculate mean and standard error for each variable and frustration match status
summary_stats <- justFrust_long %>%
  group_by(Variable, MostFrustratingMatch) %>%
  summarize(
    mean = mean(Value, na.rm = TRUE),
    std_error = sd(Value, na.rm = TRUE) / sqrt(n()),
    .groups = 'drop'
  ) %>%
  mutate(hjust = ifelse(MostFrustratingMatch, -0.5, 1.5))

# Create the plot
ggplot() +
  geom_quasirandom(data = justFrust_long, aes(x = Variable, y = Value, color = MostFrustratingMatch), 
                   width = 0.2, size = 2, show.legend = FALSE, alpha = 0.3) +
  geom_errorbar(data = summary_stats, aes(x = Variable, ymin = mean - std_error, ymax = mean + std_error, group = MostFrustratingMatch), 
                width = 0.1, color = "black", position = position_dodge(width = 0.3)) +
  geom_point(data = summary_stats, aes(x = Variable, y = mean, group = MostFrustratingMatch, color = MostFrustratingMatch), 
             size = 3, position = position_dodge(width = 0.3), show.legend = TRUE) +
  geom_text(data = summary_stats, aes(x = Variable, y = mean, label = round(mean, 2), group = MostFrustratingMatch, hjust = hjust), 
            position = position_dodge(width = 0.3), vjust = -0.5, color = "black") +
  labs(title = "Frustration Experienced on Worst-Case States",
       x = "Games",
       y = "Frustration Rating") +
  scale_y_continuous(breaks = seq(-3, 3, 1), limits = c(-3, 3)) +
  scale_x_discrete(labels = c("FrustLumber" = "Lumber", "FrustGolf" = "Golf", "FrustSand" = "Sand")) +
  scale_color_manual(
    values = c("TRUE" = "red", "FALSE" = "gray"),
    name = "Selected as Most Frustrating",
    labels = c("TRUE" = "Yes", "FALSE" = "No")
  ) +
  theme_minimal() +
  theme(panel.grid.major.y = element_blank(),
        plot.title = element_text(hjust = 0.5))


```


```{r}
library(tidyverse)
library(ggbeeswarm)

# Merge the data
merged_data <- df %>%
  left_join(qualData, by = "ID")

# Reshape to long format
justFrust_long <- merged_data %>%
  pivot_longer(cols = starts_with("Frust"), names_to = "Variable", values_to = "Value") %>%
  mutate(MostFrustratingMatch = case_when(
    (Variable == "FrustLumber" & MostFrustrating == "Lumber") ~ TRUE,
    (Variable == "FrustGolf" & MostFrustrating == "Golf") ~ TRUE,
    (Variable == "FrustSand" & MostFrustrating == "Sand") ~ TRUE,
    TRUE ~ FALSE
  ))

# Calculate mean and standard error for each variable and frustration match status
summary_stats <- justFrust_long %>%
  group_by(Variable, MostFrustratingMatch) %>%
  summarize(
    mean = mean(Value, na.rm = TRUE),
    std_error = sd(Value, na.rm = TRUE) / sqrt(n()),
    .groups = 'drop'
  ) %>%
  mutate(hjust = ifelse(MostFrustratingMatch, -0.5, 1.5))

custom_colors <- c("gray", "red")
dodge_width <- 0.9

# Create the plot
ggplot() +
  geom_violin(data = justFrust_long, aes(x = Variable, y = Value, fill = MostFrustratingMatch), 
              alpha = 0.3, show.legend = FALSE) +
  geom_quasirandom(data = justFrust_long, aes(x = Variable, y = Value, color = MostFrustratingMatch), 
                   width = 0.2, size = 1.5, alpha = 0.3, show.legend = FALSE) +
  geom_errorbar(data = summary_stats, aes(x = Variable, ymin = mean - std_error, ymax = mean + std_error, group = MostFrustratingMatch), 
                width = 0.1, color = "black", position = position_dodge(width = dodge_width)) +
  geom_point(data = summary_stats, aes(x = Variable, y = mean, group = MostFrustratingMatch, color = MostFrustratingMatch), 
             size = 3.5, position = position_dodge(width = dodge_width), show.legend = TRUE) +
  geom_text(data = summary_stats, aes(x = Variable, y = mean, label = round(mean, 2), group = MostFrustratingMatch, hjust = 1.25), 
            position = position_dodge(width = dodge_width), vjust = 0.5, color = "black", show.legend = FALSE) +
  labs(title = "Frustration Experienced on Worst-Case States",
       x = "Games",
       y = "Frustration Rating") +
  scale_y_continuous(breaks = seq(-3, 3, 1), limits = c(-3, 3)) +
  scale_x_discrete(labels = c("FrustLumber" = "Lumber", "FrustGolf" = "Golf", "FrustSand" = "Sand")) +
  scale_fill_manual(values = custom_colors) +
  scale_color_manual(
    values = c("TRUE" = "red", "FALSE" = "gray"),
    name = "Selected as Most Frustrating",
    labels = c("TRUE" = "Yes", "FALSE" = "No")
  ) +
  theme_minimal() +
  theme(panel.grid.major.y = element_blank(),
        plot.title = element_text(hjust = 0.5))
```


```{r}
library(tidyverse)
library(ggbeeswarm)

# Merge the data
merged_data <- df %>%
  left_join(qualData, by = "ID")

# Reshape to long format
justFrust_long <- merged_data %>%
  pivot_longer(cols = starts_with("Frust"), names_to = "Variable", values_to = "Value") %>%
  mutate(MostFrustratingMatch = case_when(
    (Variable == "FrustLumber" & MostFrustrating == "Lumber") ~ TRUE,
    (Variable == "FrustGolf" & MostFrustrating == "Golf") ~ TRUE,
    (Variable == "FrustSand" & MostFrustrating == "Sand") ~ TRUE,
    TRUE ~ FALSE
  )) %>%
  group_by(ID) %>%
  mutate(average_frustration = mean(Value)) %>%
  ungroup() %>%
  mutate(alpha = scale(average_frustration, 
                            center = min(average_frustration), 
                            scale = max(average_frustration) - min(average_frustration)))

# Calculate mean and standard error for each variable
summary_stats <- justFrust_long %>%
  group_by(Variable) %>%
  summarize(
    mean = mean(Value),
    std_error = sd(Value) / sqrt(n())
  )

# Create the plot
ggplot() +
  geom_line(data = justFrust_long, aes(x = Variable, y = Value, group = ID), 
            color = "black", alpha = justFrust_long$alpha, position = position_jitter(width = 0, height = 0.3)) +
  geom_quasirandom(data = justFrust_long, aes(x = Variable, y = Value, color = MostFrustratingMatch), 
                   width = 0.2, size = 2, show.legend = TRUE, alpha = 0.8) +
  geom_errorbar(data = summary_stats, aes(x = Variable, ymin = mean - std_error, ymax = mean + std_error), 
                width = 0.1, color = "black") +
  geom_point(data = summary_stats, aes(x = Variable, y = mean), size = 3, color = "black", show.legend = FALSE) +
  geom_text(data = summary_stats, aes(x = Variable, y = mean, label = round(mean, 2)), 
            vjust = -0.5, hjust = -0.5, color = "black") +
  labs(title = "Frustration Experienced on Worst-Case States",
       x = "Games",
       y = "Frustration Rating") +
  scale_y_continuous(breaks = seq(-3, 3, 1), limits = c(-3.3, 3.3)) +
  scale_x_discrete(labels = c("FrustLumber" = "Lumber", "FrustGolf" = "Golf", "FrustSand" = "Sand")) +
  scale_color_manual(
    values = c("TRUE" = "red", "FALSE" = "gray"),
    name = "Selected as\nMost Frustrating",
    labels = c("TRUE" = "Yes", "FALSE" = "No")
  ) +
  theme_minimal() +
  theme(panel.grid.major.y = element_blank(),
        plot.title = element_text(hjust = 0.5))
```


```{r}
library(tidyverse)
library(ggbeeswarm)

# Merge the data
merged_data <- df %>%
  left_join(qualData, by = "ID")

# Reshape to long format
justFrust_long <- merged_data %>%
  pivot_longer(cols = starts_with("Frust"), names_to = "Variable", values_to = "Value") %>%
  mutate(MostFrustratingMatch = case_when(
    (Variable == "FrustLumber" & MostFrustrating == "Lumber") ~ TRUE,
    (Variable == "FrustGolf" & MostFrustrating == "Golf") ~ TRUE,
    (Variable == "FrustSand" & MostFrustrating == "Sand") ~ TRUE,
    TRUE ~ FALSE
  )) %>%
  group_by(ID) %>%
  mutate(average_frustration = mean(Value)) %>%
  ungroup() %>%
  mutate(alpha = scale(average_frustration, 
                       center = min(average_frustration), 
                       scale = max(average_frustration) - min(average_frustration)))

# Set the factor levels for Variable to reorder categories
justFrust_long$Variable <- factor(justFrust_long$Variable, levels = c("FrustLumber", "FrustGolf", "FrustSand"))

# Calculate mean and standard error for each variable
summary_stats <- justFrust_long %>%
  group_by(Variable) %>%
  summarize(
    mean = mean(Value),
    std_error = sd(Value) / sqrt(n())
  )

# Create the plot
ggplot() +
  geom_line(data = justFrust_long, aes(x = Variable, y = Value, group = ID), 
            color = "black", alpha = justFrust_long$alpha, position = position_jitter(width = 0, height = 0.3)) +
  geom_quasirandom(data = justFrust_long, aes(x = Variable, y = Value, color = MostFrustratingMatch), 
                   width = 0.2, size = 2, show.legend = TRUE, alpha = 0.8) +
  geom_errorbar(data = summary_stats, aes(x = Variable, ymin = mean - std_error, ymax = mean + std_error), 
                width = 0.1, color = "black") +
  geom_point(data = summary_stats, aes(x = Variable, y = mean), size = 3, color = "black", show.legend = FALSE) +
  geom_text(data = summary_stats, aes(x = Variable, y = mean, label = round(mean, 2)), 
            vjust = -0.5, hjust = -0.5, color = "black") +
  labs(title = "Frustration Experienced on Worst-Case States",
       x = "Games",
       y = "Frustration Rating") +
  scale_y_continuous(breaks = seq(-3, 3, 1), limits = c(-3.3, 3.3)) +
  scale_x_discrete(labels = c("FrustLumber" = "Lumber", "FrustGolf" = "Golf", "FrustSand" = "Sand")) +
  scale_color_manual(
    values = c("TRUE" = "red", "FALSE" = "gray"),
    name = "Selected as\nMost Frustrating",
    labels = c("TRUE" = "Yes", "FALSE" = "No")
  ) +
  theme_minimal() +
  theme(panel.grid.major.y = element_blank(),
        plot.title = element_text(hjust = 0.5))

```


```{r}
# Load necessary libraries
install.packages("ordinal")  # Install the ordinal package if not already installed
library(ordinal)
library(tidyverse)

# Assuming df is your existing data frame
# Step 1: Select ID and columns starting with "Frust" and reshape the data
df_long <- df %>%
  select(ID, starts_with("Frust")) %>%
  pivot_longer(cols = -ID, names_to = "Variable", values_to = "Value")

# Step 2: Ensure 'Value' is treated as an ordinal factor
df_long$Value <- as.ordered(df_long$Value)

# Step 3: Fit the cumulative link mixed model
clmm_model <- clmm(Value ~ Variable + (1 | ID), data = df_long)

# Step 4: Display the summary of the model
summary(clmm_model)

```

